// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Computer.hdl

/**
 * The HACK computer, including CPU, ROM and RAM.
 * When reset is 0, the program stored in the computer's ROM executes.
 * When reset is 1, the execution of the program restarts. 
 * Thus, to start a program's execution, reset must be pushed "up" (1)
 * and "down" (0). From this point onward the user is at the mercy of 
 * the software. In particular, depending on the program's code, the 
 * screen may show some output and the user may be able to interact 
 * with the computer via the keyboard.
 */

CHIP Computer {

    IN reset;

    PARTS:
    // Put your code here:
    // A Register
    Not(in=instruction[15],out=isA); // i[15] = 0 => isA
    Not(in=isA,out=isC); // i[15] = 1 => isC
    Mux16(a=instruction,b=ALUout,sel=isC,out=Ain);
    And(a=isC,b=instruction[5],out=ALUtoA);
    Or(a=isA,b=ALUtoA,out=Aload);

    ARegister(in=Ain,load=Aload,out=Aout,out[0..14]=addressM);

    // D Register
    And(a=isC,b=instruction[4],out=Dload);
    DRegister(in=ALUout,load=Dload,out=Dout);

    // ALU
    Mux16(a=Aout,b=inM,sel=instruction[12],out=AorM);
    ALU(x=Dout,y=AorM,zx=instruction[11],nx=instruction[10],zy=instruction[9],ny=instruction[8],f=instruction[7],no=instruction[6],out=ALUout,out=outM,zr=zr,ng=ng);

    // Destination
    And(a=ng,b=instruction[2],out=ngPass);
    And(a=zr,b=instruction[1],out=eqPass);

    // (x < 0) || (x = 0) 等價於 x > 0
    Or(a=ng,b=zr,out=ngorzr); // !!!!!
    Not(in=ngorzr,out=gt);
    And(a=gt,b=instruction[0],out=gtPass);

    Or(a=ngPass,b=eqPass,out=elPass);
    Or(a=elPass,b=gtPass,out=allPass);
    And(a=isC,b=allPass,out=PCload);

    // Output
    PC(in=Aout,load=PCload,inc=true,reset=reset,out[0..14]=pc);
    And(a=isC,b=instruction[3],out=writeM);
}
